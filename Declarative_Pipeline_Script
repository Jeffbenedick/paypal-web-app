pipeline{
     agent any 
     tools{
        maven "maven 3.8.4"
     }

    stages{
    stage('1.clone'){
      steps{
            sh "echo clonning the latest version of the code" 
            git credentialsId: 'GIT-CREDENTIALS', url: 'https://github.com/Jeffbenedick/paypal-web-app'
            sh "echo clonning successful"
      }
    }
     stage('2.Build'){
      steps{
        sh "echo validation, compilation, testing and package"
        sh "echo testing successful and ready to package"
        sh "mvn clean package"
      }
    }
    stage('3.Quality'){
      steps{
        sh "echo performing code quality analysis"
        sh "echo code quality successful and ready to upload"
        sh "mvn sonar:sonar"
      }
    }
    stage('4.uploadArtifacts'){
      steps{
        sh "mvn deploy"
      }
    }
    stage('5.Deploy2UAT'){
      steps{
        sh "echo DEPLOYING TO UAT for further testing and validation"
        sshagent(['ssh-tomcat_credential']){
        sh "scp -o StrictHostKeyChecking=no target/*.war ec2-user@3.91.203.107:/opt/tomcat9/webapps/uatapp.war"
      }
    }
    }
    stage('6.Deploy2Prod'){
      steps{
        sh "echo DEPLOYING application TO Production"
        timeout(time:8, unit:'HOURS'){
        input message: 'Please approve deployment to Production'
    }
        sshagent(['ssh-tomcat_credential']){
        sh "scp -o StrictHostKeyChecking=no target/*.war ec2-user@3.91.203.107:/opt/tomcat9/webapps/uatapp.war"
      }
    }
   post{
    always{
     mail bcc: 'jeffbenedick@gmail.com', body: '''Hello All,

     Build was successful

     Regards
     Jeffrey Benedick''', cc: 'jeffbenedick@gmail.com', from: '', replyTo: '', subject: 'Success', to: 'jeffbenedick@gmail.com'
    }
   }
    }
}
}
